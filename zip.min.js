// @ts-nocheck
function crc32(e){const t=function(){let e=new Uint32Array(256);for(let t=0;t<256;t++){let n=t;for(let e=0;e<8;e++)n=1&n?3988292384^n>>>1:n>>>1;e[t]=n>>>0}return e}();let n=4294967295;for(let i=0;i<e.length;i++)n=n>>>8^t[255&(n^e[i])];return(4294967295^n)>>>0}function writeUint32LE(e,t,n){e.setUint32(t,n,!0)}function writeUint16LE(e,t,n){e.setUint16(t,n,!0)}function downloadZipWithMultipleFiles(e,t=example){const n=new TextEncoder;let i=e.map((({filename:e,textContent:t})=>{let i=n.encode(e),r=n.encode(t),w=crc32(r),U=r.byteLength;return{filename:e,nameBytes:i,dataBytes:r,crc:w,compressedSize:U,uncompressedSize:U}})),r=[],w=0;i.forEach((e=>{const t=e.nameBytes.length,n=30+t;let i=new ArrayBuffer(n),U=new DataView(i),c=0;writeUint32LE(U,c,67324752),c+=4,writeUint16LE(U,c,20),c+=2,writeUint16LE(U,c,0),c+=2,writeUint16LE(U,c,0),c+=2,writeUint16LE(U,c,0),c+=2,writeUint16LE(U,c,0),c+=2,writeUint32LE(U,c,e.crc),c+=4,writeUint32LE(U,c,e.compressedSize),c+=4,writeUint32LE(U,c,e.uncompressedSize),c+=4,writeUint16LE(U,c,t),c+=2,writeUint16LE(U,c,0),c+=2,new Uint8Array(i,c).set(e.nameBytes),e.localHeaderOffset=w,r.push(i),r.push(e.dataBytes.buffer),w+=n+e.dataBytes.byteLength}));let U=[];i.forEach((e=>{const t=e.nameBytes.length;let n=new ArrayBuffer(46+t),i=new DataView(n),r=0;writeUint32LE(i,r,33639248),r+=4,writeUint16LE(i,r,20),r+=2,writeUint16LE(i,r,20),r+=2,writeUint16LE(i,r,0),r+=2,writeUint16LE(i,r,0),r+=2,writeUint16LE(i,r,0),r+=2,writeUint16LE(i,r,0),r+=2,writeUint32LE(i,r,e.crc),r+=4,writeUint32LE(i,r,e.compressedSize),r+=4,writeUint32LE(i,r,e.uncompressedSize),r+=4,writeUint16LE(i,r,t),r+=2,writeUint16LE(i,r,0),r+=2,writeUint16LE(i,r,0),r+=2,writeUint16LE(i,r,0),r+=2,writeUint16LE(i,r,0),r+=2,writeUint32LE(i,r,0),r+=4,writeUint32LE(i,r,e.localHeaderOffset),r+=4,new Uint8Array(n,r).set(e.nameBytes),U.push(n)}));const c=i.length,L=U.reduce(((e,t)=>e+t.byteLength),0),a=w;let o=new ArrayBuffer(22),E=new DataView(o),s=0;writeUint32LE(E,s,101010256),s+=4,writeUint16LE(E,s,0),s+=2,writeUint16LE(E,s,0),s+=2,writeUint16LE(E,s,c),s+=2,writeUint16LE(E,s,c),s+=2,writeUint32LE(E,s,L),s+=4,writeUint32LE(E,s,a),s+=4,writeUint16LE(E,s,0),s+=2;const l=function(e){let t=e.reduce(((e,t)=>e+t.byteLength),0),n=new Uint8Array(t),i=0;return e.forEach((e=>{n.set(new Uint8Array(e),i),i+=e.byteLength})),n.buffer}([...r,...U,o]),f=new Blob([l],{type:"application/zip"}),d=URL.createObjectURL(f),u=document.createElement("a");u.href=d,u.download=`${t}.zip`,document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(d)}
