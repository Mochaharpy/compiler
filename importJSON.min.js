// @ts-nocheck
const uploadArea=document.getElementById("upload-area"),fileInput=document.getElementById("file-input");function handleFileSelect(e){const t=e.target.files[0];t&&processFile(t)}function handleDragOver(e){e.preventDefault(),uploadArea.classList.add("dragover")}function handleDragLeave(){uploadArea.classList.remove("dragover")}function handleDrop(e){e.preventDefault(),uploadArea.classList.remove("dragover");const t=e.dataTransfer.files[0];t&&processFile(t)}function removePop(e){const t=e.split(".");return t.length>1?(t.pop(),t.join(".")):e}function processFile(e){document.getElementById("name").textContent=removePop(e.name);const t=new FileReader;t.onload=function(e){try{importJSON(JSON.parse(e.target.result))}catch(e){console.error(e),alert("Invalid JSON file")}},t.readAsText(e)}function importJSON(e){for(let e in files)files.hasOwnProperty(e)&&files[e].delete();files={};const t=Object.keys(e).length;for(fileCounter=t-1;tabsDiv.firstChild;)tabsDiv.removeChild(tabsDiv.firstChild);for(i=0;i<t;i++){let t=e[Object.keys(e)[i]],n=t.uniqueId,a=t.name,r=t.type,l=t.content,o=new File(r,a,n);files[n]=o,o.createMonacoEditor(l),addTab(o),setActiveFile(o)}}fileInput.addEventListener("change",handleFileSelect),uploadArea.addEventListener("dragover",handleDragOver),uploadArea.addEventListener("dragleave",handleDragLeave),uploadArea.addEventListener("drop",handleDrop),uploadArea.addEventListener("click",(()=>{fileInput.click()}));