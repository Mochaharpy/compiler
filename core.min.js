// @ts-nocheck
let resetConsole=!1,repoName="example";const tabsDiv=document.getElementById("tabs"),outputDiv=document.getElementById("output"),inputDiv=document.getElementById("input");let files={},fileCounter=0,activeFile=null,firstHtmlFileId=null;class File{constructor(e,t,n,o){this.uniqueId=n,this.name=t,this.type=e,this.element=document.createElement("div"),this.element.classList.add("file"),this.element.id=`editor-${t.replace(".","-")}`,this.editor=null,inputDiv.append(this.element)}createMonacoEditor(e){}getInitialContent(e){switch(e){case"html":return'<!DOCTYPE html>\n<html>\n\n<head>\n\t<title></title>\n\t<link rel="stylesheet" href="styles.css">\n\t<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" />\n</head>\n\n<body>\n\t\n\t<script src="script.js"><\/script>\n</body>\n\n</html>';case"css":return"/* CSS goes here */";case"js":return"// JavaScript goes here";default:return""}}getValue(){return this.editor?this.editor.getValue():""}delete(){this.editor&&this.editor.dispose(),this.element.remove()}}function createNewFile(e,t){const n="file"+fileCounter++,o=new File(e,t||`${n}.${e}`,n);files[n]=o,o.createMonacoEditor(),addTab(o),setActiveFile(o),"html"===e&&null===firstHtmlFileId&&(firstHtmlFileId=n,previewFirstHtmlFile())}function addTab(e){const t=document.createElement("div");t.classList.add("tab"),t.dataset.fileId=e.uniqueId;const n=document.createElement("span");n.textContent=e.name,n.classList.add("file-name"),t.appendChild(n);const o=document.createElement("div");o.classList.add("settings");const i=document.createElement("button");i.innerHTML='<i class="fa-solid fa-pencil pencil"></i>',i.classList.add("rename-button"),i.addEventListener("click",(o=>{o.stopPropagation(),startRename(t,e,n)})),o.appendChild(i);const s=document.createElement("button");s.classList.add("close-tab"),s.innerHTML='<i class="fa-solid fa-xmark pencil"></i>',s.addEventListener("click",(t=>{t.stopPropagation(),removeFile(e)})),o.appendChild(s),t.appendChild(o),tabsDiv.appendChild(t),t.addEventListener("click",(function(){setActiveFile(e)}))}function download(){let e=[],t=0;const n=document.getElementById("name").textContent||"example",o=new WeakMap;for(let n in files)if(files.hasOwnProperty(n)){const i=files[n];thisFile=serializeFile(i,o),e.push({filename:`${i.name}`,textContent:`${i.getValue()}`}),t++}if(1===t){const{filename:t,textContent:n}=e[0];let o="text/plain";switch(t.split(".").pop().toLowerCase()){case"json":o="application/json";break;case"html":o="text/html";break;case"css":o="text/css";break;case"js":o="application/javascript";break;case"txt":o="text/plain"}const i=new Blob([n],{type:o}),s=URL.createObjectURL(i),l=document.createElement("a");l.href=s,l.download=t,l.style.display="none",document.body.appendChild(l),l.click(),URL.revokeObjectURL(s),document.body.removeChild(l),console.log(`Downloaded single file: ${t}`)}else downloadZipWithMultipleFiles(e,n)}function downloadJSON(){const e=document.getElementById("name").textContent||"export";let t={};const n=new WeakMap;for(let e in files)if(files.hasOwnProperty(e)){const o=files[e];thisFile=serializeFile(o,n),t[o.uniqueId]=thisFile}const o=JSON.stringify(t,null,2),i=`${e}.json`,s=new Blob([o],{type:"application/json"}),l=URL.createObjectURL(s),a=Object.assign(document.createElement("a"),{href:l,style:"display: none",download:i});document.body.appendChild(a),a.click(),URL.revokeObjectURL(l),document.body.removeChild(a)}function serializeFile(e,t){return t.has(e)?{message:"Circular reference detected"}:(t.set(e,!0),{uniqueId:e.uniqueId,name:e.name,type:e.type,content:e.getValue()})}function extractFuncs(e){const t={},n=new WeakSet;return function e(o,i){if(!n.has(o)){n.add(o);for(const n in o){const s=o[n];"function"==typeof s&&"getValue()"===n?(t[i]||(t[i]={}),t[i][n]=s):"object"==typeof s&&null!==s&&e(s,n)}}}(e,null),t}class TooltipBox extends HTMLElement{constructor(){if(super(),!document.getElementById("tooltip-box-global-styles")){const e=document.createElement("style");e.id="tooltip-box-global-styles",e.textContent='\ntooltip-box {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.85rem;\n  white-space: nowrap;\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity 0.2s ease-in-out;\n  z-index: 10;\n}\n\n/* Show tooltip whenever its immediate parent is hovered: */\n*:hover > tooltip-box {\n  opacity: 1;\n}\n\n/* position="bottom" override */\ntooltip-box[position="bottom"] {\n  bottom: auto;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n}\n/* position="left" override */\ntooltip-box[position="left"] {\n  bottom: auto;\n  left: auto;\n  right: 100%;\n  top: 50%;\n  transform: translateY(-50%);\n}\n/* position="right" override */\ntooltip-box[position="right"] {\n  bottom: auto;\n  left: 100%;\n  right: auto;\n  top: 50%;\n  transform: translateY(-50%);\n}\n          ',document.head.appendChild(e)}const e=this.getAttribute("text")||"";this.innerHTML=`<span class="tooltip-content">${e}</span>`}connectedCallback(){const e=this.parentElement;if(!e)return;"static"===window.getComputedStyle(e).position&&(e.style.position="relative")}static get observedAttributes(){return["text","position"]}attributeChangedCallback(e,t,n){if("text"===e){const e=this.querySelector(".tooltip-content");e&&(e.textContent=n)}}}customElements.define("tooltip-box",TooltipBox);const nameSpan=document.getElementById("name");nameSpan.addEventListener("paste",(function(e){e.preventDefault();const t=e.clipboardData.getData("text/plain");document.execCommand("insertText",!1,t)}));
